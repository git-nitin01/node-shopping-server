name: Build and Deploy to Azure

# This workflow is triggered on pushes to the 'main' and 'release' branches.
# It automates the process of building a Docker image from the code in the repository, 
# pushing the image to Azure Container Registry (ACR), and then deploying it to an 
# Azure Web App service. It uses GitHub Actions for CI/CD to ensure that any code changes 
# in these branches are automatically tested, built, and deployed, streamlining the development 
# and deployment process.

on:
  push:
    branches:
      - main
      - release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to ACR
      run: echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY_URL }} -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin

    - name: Build Docker image
      run: |
        docker build \
          --build-arg DB_HOST=${{ secrets.DB_HOST }} \
          --build-arg DB_USER=${{ secrets.DB_USER }} \
          --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          --build-arg DB_DATABASE=${{ secrets.DB_DATABASE }} \
          --build-arg DB_CA_CERT_PATH=/src/MYSQL_SSL_CERT/ca-cert.pem \
          -t ${{ secrets.DOCKER_REGISTRY_URL }}/myapp:${{ github.sha }} .

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_REGISTRY_URL }}/myapp:${{ github.sha }}


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'jk-node'
        images: '${{ secrets.DOCKER_REGISTRY_URL }}/myapp:${{ github.sha }}'
